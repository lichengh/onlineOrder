{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","props","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","foodData","setFoodData","useEffect","json","console","log","restId","value","onSelect","placeholder","style","width","onChange","map","item","id","name","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","setState","onSuccess","render","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","React","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9bcacb0.chunk.js","sourcesContent":["export const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n};\n\nexport const signup = (data) => {\n    const signupUrl = \"/signup\";\n\n    return fetch(signupUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to sign up\");\n        }\n    });\n};\n\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\n// fetch restaurant data\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};","import React, {useEffect, useState} from 'react';\nimport { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport {getRestaurants} from '../utils'\nimport {getMenus} from '../utils'\nimport { addItemToCart} from '../utils'\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select\n\nconst AddToCartButton = ({ itemId }) => {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    );\n};\n\nfunction FoodList(props) {\n    const [curRest, setCurRest ] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n    const [foodData, setFoodData] = useState([]);\n\n    useEffect(() => {\n        setLoadingRest(true);\n        getRestaurants ()\n            .then( (data) => {\n                console.log('res data -> ', data);\n                setRestaurants(data);\n            })\n            .catch( (err) => {\n                console.log('err -> ', err.message)\n            })\n            .finally( () => {\n                setLoadingRest(false);\n        })\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        getMenus(curRest)\n            .then((data) => {\n                console.log('menu -> ', data)\n                setFoodData(data);\n            })\n            .catch((err) => {\n                console.log(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [curRest]);\n\n\n    return (\n        <div>\n            <Select\n                    value = { curRest }\n                    onSelect={ value => setCurRest(value)}\n                    placeholder=\"Select a restaurant\"\n                    loading={ loadingRest }\n                    style={{ width: 300 }}\n                    onChange={() => {}}\n            >\n                {\n                    restaurants.map((item) => {\n                        return <Option key={item.id} value= {item.id}> {item.name} </Option>;\n                    })\n                }\n            </Select>\n            {\n                curRest &&\n                    <List\n                        grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 4,\n                            lg: 4,\n                            xl: 3,\n                            xxl: 3,\n                        }}\n\n                        dataSource={foodData}\n                        renderItem={ (item) => (\n                            <List.Item>\n                                <Card\n                                    title={item.name}\n                                    extra={<AddToCartButton itemId={item.id} /> }\n                                >\n\n                                    <img\n                                        src = {item.imageUrl}\n                                        alt={item.name}\n                                        style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\n                                    />\n                                    { `Price: ${item.price}`}\n                                </Card>\n                            </List.Item>\n                        )}\n                    />\n                }\n        </div>\n    );\n};\n\nexport default FoodList;","import { Button, Form, Input, message } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\n\nclass LoginForm extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    onFinish = (data) => {\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => {\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render = () => {\n        return (\n            <Form\n                name=\"normal_login\"\n                onFinish={this.onFinish}\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\n                >\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n                        Login\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n\nexport default LoginForm;","import { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData?.orderItemList}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../utils\";\n\nclass SignupForm extends React.Component {\n    state = {\n        displayModal: false,\n    };\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        });\n    };\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        });\n    };\n\n    onFinish = (data) => {\n        signup(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                });\n                message.success(`Successfully signed up`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register\n                </Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        initialValues={{ remember: true }}\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                { required: true, message: \"Please input your password!\" },\n                            ]}\n                        >\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"firstName\"\n                            rules={[\n                                { required: true, message: \"Please input your first name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"firstname\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            rules={[\n                                { required: true, message: \"Please input your last name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"lastname\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default SignupForm;\n","import { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Header>\n                <div className=\"header\">\n                    <Title\n                        level={2}\n                        style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n                    >\n                        Lai Food\n                    </Title>\n                    <div>{authed ? <MyCart /> : <SignupForm />}</div>\n                </div>\n            </Header>\n            <Content\n                style={{\n                    padding: \"50px\",\n                    maxHeight: \"calc(100% - 64px)\",\n                    overflowY: \"auto\",\n                }}\n            >\n                {authed ? (\n                    <FoodList />\n                ) : (\n                    <LoginForm onSuccess={() => setAuthed(true)} />\n                )}\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}